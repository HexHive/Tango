diff --git a/configure.ac b/configure.ac
index c2878e3d..cf85a25f 100644
@@ -190,7 +190,7 @@ if test "$GCC" = "yes" || test "$GCC" = "egcs"; then
 	OSSH_CHECK_CFLAG_COMPILE([-Wpointer-sign], [-Wno-pointer-sign])
 	OSSH_CHECK_CFLAG_COMPILE([-Wunused-result], [-Wno-unused-result])
 	OSSH_CHECK_CFLAG_COMPILE([-fno-strict-aliasing])
-	OSSH_CHECK_CFLAG_COMPILE([-D_FORTIFY_SOURCE=2])
+	#OSSH_CHECK_CFLAG_COMPILE([-D_FORTIFY_SOURCE=2])
     if test "x$use_toolchain_hardening" = "x1"; then
 	OSSH_CHECK_LDFLAG_LINK([-Wl,-z,relro])
 	OSSH_CHECK_LDFLAG_LINK([-Wl,-z,now])
--- a/configure.ac
+++ b/configure.ac
@@ -3163,42 +3163,7 @@ AC_ARG_WITH([sandbox],
 # function with which they implement select(2)) use an extra file descriptor
 # when calling select(2), which means we can't use the rlimit sandbox.
 AC_MSG_CHECKING([if select works with descriptor rlimit])
-AC_RUN_IFELSE(
-	[AC_LANG_PROGRAM([[
-#include <sys/types.h>
-#ifdef HAVE_SYS_TIME_H
-# include <sys/time.h>
-#endif
-#include <sys/resource.h>
-#ifdef HAVE_SYS_SELECT_H
-# include <sys/select.h>
-#endif
-#include <errno.h>
-#include <fcntl.h>
-#include <stdlib.h>
-	]],[[
-	struct rlimit rl_zero;
-	int fd, r;
-	fd_set fds;
-	struct timeval tv;
-
-	fd = open("/dev/null", O_RDONLY);
-	FD_ZERO(&fds);
-	FD_SET(fd, &fds);
-	rl_zero.rlim_cur = rl_zero.rlim_max = 0;
-	setrlimit(RLIMIT_FSIZE, &rl_zero);
-	setrlimit(RLIMIT_NOFILE, &rl_zero);
-	tv.tv_sec = 1;
-	tv.tv_usec = 0;
-	r = select(fd+1, &fds, NULL, NULL, &tv);
-	exit (r == -1 ? 1 : 0);
-	]])],
-	[AC_MSG_RESULT([yes])
-	 select_works_with_rlimit=yes],
-	[AC_MSG_RESULT([no])
-	 select_works_with_rlimit=no],
-	[AC_MSG_WARN([cross compiling: assuming yes])]
-)
+select_works_with_rlimit=no
 
 AC_MSG_CHECKING([if setrlimit(RLIMIT_NOFILE,{0,0}) works])
 AC_RUN_IFELSE(
diff --git a/authfile.c b/authfile.c
index 7411b68f..b2c9ab5a 100644
--- a/authfile.c
+++ b/authfile.c
@@ -181,6 +181,7 @@ sshkey_load_public_rsa1(int fd, struct sshkey **keyp, char **commentp)
 int
 sshkey_perm_ok(int fd, const char *filename)
 {
+#if 0
 	struct stat st;
 
 	if (fstat(fd, &st) < 0)
@@ -203,6 +204,7 @@ sshkey_perm_ok(int fd, const char *filename)
 		error("This private key will be ignored.");
 		return SSH_ERR_KEY_BAD_PERMISSIONS;
 	}
+#endif
 	return 0;
 }
 
