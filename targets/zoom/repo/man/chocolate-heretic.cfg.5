.TH chocolate-doom.cfg 5
.SH NAME
chocolate-doom.cfg \- Chocolate Doom configuration file
.SH DESCRIPTION
.PP
\fIchocolate-doom.cfg\fR
is a configuration file for \fBchocolate-doom\fR(6).  This file acts
as an auxiliary configuration file; the main configuration options
are stored in \fBdefault.cfg\fR, which contains the same configuration
options as Vanilla Doom (for compatibility).  \fIchocolate-doom.cfg\fR
contains configuration options that are specific to Chocolate Doom
only.
.PP
\fIchocolate-doom.cfg\fR is normally stored in the user's home directory,
as \fI~/.local/share/chocolate-doom/chocolate-doom.cfg\fR.  The path can be
overridden using the \fBXDG_DATA_HOME\fR environment variable (see the XDG
Base Directory Specification).
.PP
The \fBchocolate-setup\fR(6) tool provides a simple to use front-end
for editing \fIchocolate-doom.cfg\fR.
.SH FILE FORMAT
.PP
The file format is the same as that used for \fBdefault.cfg\fR(5).
.br

.SH CONFIGURATION VARIABLES
.TP
\fBvideo_driver\fR
Name of the SDL video driver to use.  If this is an empty string, the default video driver is used. 
.TP
\fBwindow_position\fR
Position of the window on the screen when running in windowed mode. Accepted values are: "" (empty string) \- don't care, "center" \- place window at center of screen, "x,y" \- place window at the specified coordinates. 
.TP
\fBfullscreen\fR
If non\-zero, the game will run in full screen mode.  If zero, the game will run in a window. 
.TP
\fBvideo_display\fR
Index of the display on which the game should run. This has no effect if running in windowed mode (fullscreen=0) and window_position is not set to "center". 
.TP
\fBaspect_ratio_correct\fR
If non\-zero, the screen will be stretched vertically to display correctly on a square pixel video mode. 
.TP
\fBinteger_scaling\fR
If non\-zero, forces integer scales for resolution\-independent rendering. 
.TP
\fBwindow_width\fR
Window width when running in windowed mode. 
.TP
\fBwindow_height\fR
Window height when running in windowed mode. 
.TP
\fBfullscreen_width\fR
Width for screen mode when running fullscreen. If this and fullscreen_height are both set to zero, we run fullscreen as a desktop window that covers the entire screen, rather than ever switching screen modes. It should usually be unnecessary to set this value. 
.TP
\fBfullscreen_height\fR
Height for screen mode when running fullscreen. See documentation for fullscreen_width. 
.TP
\fBforce_software_renderer\fR
If non\-zero, force the use of a software renderer. For use on systems lacking hardware acceleration. 
.TP
\fBmax_scaling_buffer_pixels\fR
Maximum number of pixels to use for intermediate scaling buffer. More pixels mean that the screen can be rendered more precisely, but there are diminishing returns on quality. The default limits to 16,000,000 pixels, which is enough to cover 4K monitor standards. 
.TP
\fBstartup_delay\fR
Number of milliseconds to wait on startup after the video mode has been set, before the game will start.  This allows the screen to settle on some monitors that do not display an image for a brief interval after changing video modes. 
.TP
\fBgraphical_startup\fR
If non\-zero, display the graphical startup screen. 
.TP
\fBshow_endoom\fR
If non\-zero, the ENDOOM text screen is displayed when exiting the game. If zero, the ENDOOM screen is not displayed. 
.TP
\fBpng_screenshots\fR
If non\-zero, save screenshots in PNG format. If zero, screenshots are saved in PCX format, as Vanilla Doom does. 
.TP
\fBsnd_samplerate\fR
Sound output sample rate, in Hz.  Typical values to use are 11025, 22050, 44100 and 48000. 
.TP
\fBsnd_cachesize\fR
Maximum number of bytes to allocate for caching converted sound effects in memory. If set to zero, there is no limit applied. 
.TP
\fBsnd_maxslicetime_ms\fR
Maximum size of the output sound buffer size in milliseconds. Sound output is generated periodically in slices. Higher values might be more efficient but will introduce latency to the sound output. The default is 28ms (one slice per tic with the 35fps timer). 
.TP
\fBsnd_pitchshift\fR
If non\-zero, sound effects will have their pitch varied up or down by a random amount during play. If zero, sound effects play back at their default pitch. 
.TP
\fBsnd_musiccmd\fR
External command to invoke to perform MIDI playback. If set to the empty string, SDL_mixer's internal MIDI playback is used. This only has any effect when snd_musicdevice is set to General MIDI output. 
.TP
\fBsnd_dmxoption\fR
Value to set for the DMXOPTION environment variable. If this contains "\-opl3", output for an OPL3 chip is generated when in OPL MIDI playback mode. 
.TP
\fBopl_io_port\fR
The I/O port to use to access the OPL chip.  Only relevant when using native OPL music playback. 
.TP
\fBuse_libsamplerate\fR
Controls whether libsamplerate support is used for performing sample rate conversions of sound effects.  Support for this must be compiled into the program. If zero, libsamplerate support is disabled.  If non\-zero, libsamplerate is enabled. Increasing values roughly correspond to higher quality conversion; the higher the quality, the slower the conversion process.  Linear conversion = 1; Zero order hold = 2; Fast Sinc filter = 3; Medium quality Sinc filter = 4; High quality Sinc filter = 5. 
.TP
\fBlibsamplerate_scale\fR
Scaling factor used by libsamplerate. This is used when converting sounds internally back into integer form; normally it should not be necessary to change it from the default value. The only time it might be needed is if a PWAD file is loaded that contains very loud sounds, in which case the conversion may cause sound clipping and the scale factor should be reduced. The lower the value, the quieter the sound effects become, so it should be set as high as is possible without clipping occurring. 
.TP
\fBmusic_pack_path\fR
Full path to a directory containing configuration files for substitute music packs. These packs contain high quality renderings of game music to be played instead of using the system's built\-in MIDI playback. 
.TP
\fBtimidity_cfg_path\fR
Full path to a Timidity configuration file to use for MIDI playback. The file will be evaluated from the directory where it is evaluated, so there is no need to add "dir" commands into it. 
.TP
\fBgus_patch_path\fR
Path to GUS patch files to use when operating in GUS emulation mode. 
.TP
\fBgus_ram_kb\fR
Number of kilobytes of RAM to use in GUS emulation mode. Valid values are 256, 512, 768 or 1024. 
.TP
\fBvanilla_keyboard_mapping\fR
If non\-zero, the game behaves like Vanilla Doom, always assuming an American keyboard mapping.  If this has a value of zero, the native keyboard mapping of the keyboard is used. 
.TP
\fBplayer_name\fR
Name to use in network games for identification.  This is only used on the "waiting" screen while waiting for the game to start. 
.TP
\fBgrabmouse\fR
If this is non\-zero, the mouse will be "grabbed" when running in windowed mode so that it can be used as an input device. When running full screen, this has no effect. 
.TP
\fBnovert\fR
If non\-zero, all vertical mouse movement is ignored.  This emulates the behavior of the "novert" tool available under DOS that performs the same function. 
.TP
\fBmouse_acceleration\fR
Mouse acceleration factor.  When the speed of mouse movement exceeds the threshold value (mouse_threshold), the speed is multiplied by this value. 
.TP
\fBmouse_threshold\fR
Mouse acceleration threshold.  When the speed of mouse movement exceeds this threshold value, the speed is multiplied by an acceleration factor (mouse_acceleration). 
.TP
\fBmouseb_strafeleft\fR
Mouse button to strafe left. 
.TP
\fBmouseb_straferight\fR
Mouse button to strafe right. 
.TP
\fBmouseb_use\fR
Mouse button to "use" an object, eg. a door or switch. 
.TP
\fBmouseb_backward\fR
Mouse button to move backwards. 
.TP
\fBmouseb_prevweapon\fR
Mouse button to cycle to the previous weapon. 
.TP
\fBmouseb_nextweapon\fR
Mouse button to cycle to the next weapon. 
.TP
\fBdclick_use\fR
If non\-zero, double\-clicking a mouse button acts like pressing the "use" key to use an object in\-game, eg. a door or switch. 
.TP
\fBjoystick_guid\fR
SDL GUID string indicating the joystick to use. An empty string indicates that no joystick is configured. 
.TP
\fBjoystick_index\fR
Index of SDL joystick to use; this is only used in the case where multiple identical joystick devices are connected which have the same GUID, to distinguish between devices. 
.TP
\fBjoystick_x_axis\fR
Joystick axis to use to for horizontal (X) movement. 
.TP
\fBjoystick_x_invert\fR
If non\-zero, movement on the horizontal joystick axis is inverted. 
.TP
\fBjoystick_y_axis\fR
Joystick axis to use to for vertical (Y) movement. 
.TP
\fBjoystick_y_invert\fR
If non\-zero, movement on the vertical joystick axis is inverted. 
.TP
\fBjoystick_strafe_axis\fR
Joystick axis to use to for strafing movement. 
.TP
\fBjoystick_strafe_invert\fR
If non\-zero, movement on the joystick axis used for strafing is inverted. 
.TP
\fBjoystick_look_axis\fR
Joystick axis to use to for looking up and down. 
.TP
\fBjoystick_look_invert\fR
If non\-zero, movement on the joystick axis used for looking is inverted. 
.TP
\fBjoystick_physical_button0\fR
The physical joystick button that corresponds to joystick virtual button #0. 
.TP
\fBjoystick_physical_button1\fR
The physical joystick button that corresponds to joystick virtual button #1. 
.TP
\fBjoystick_physical_button2\fR
The physical joystick button that corresponds to joystick virtual button #2. 
.TP
\fBjoystick_physical_button3\fR
The physical joystick button that corresponds to joystick virtual button #3. 
.TP
\fBjoystick_physical_button4\fR
The physical joystick button that corresponds to joystick virtual button #4. 
.TP
\fBjoystick_physical_button5\fR
The physical joystick button that corresponds to joystick virtual button #5. 
.TP
\fBjoystick_physical_button6\fR
The physical joystick button that corresponds to joystick virtual button #6. 
.TP
\fBjoystick_physical_button7\fR
The physical joystick button that corresponds to joystick virtual button #7. 
.TP
\fBjoystick_physical_button8\fR
The physical joystick button that corresponds to joystick virtual button #8. 
.TP
\fBjoystick_physical_button9\fR
The physical joystick button that corresponds to joystick virtual button #9. 
.TP
\fBjoystick_physical_button10\fR
The physical joystick button that corresponds to joystick virtual button #10. 
.TP
\fBjoyb_strafeleft\fR
Joystick virtual button to make the player strafe left. 
.TP
\fBjoyb_straferight\fR
Joystick virtual button to make the player strafe right. 
.TP
\fBjoyb_menu_activate\fR
Joystick virtual button to activate the menu. 
.TP
\fBjoyb_toggle_automap\fR
Joystick virtual button to toggle the automap. 
.TP
\fBjoyb_prevweapon\fR
Joystick virtual button that cycles to the previous weapon. 
.TP
\fBjoyb_nextweapon\fR
Joystick virtual button that cycles to the next weapon. 
.TP
\fBkey_pause\fR
Key to pause or unpause the game. 
.TP
\fBkey_menu_activate\fR
Key that activates the menu when pressed. 
.TP
\fBkey_menu_up\fR
Key that moves the cursor up on the menu. 
.TP
\fBkey_menu_down\fR
Key that moves the cursor down on the menu. 
.TP
\fBkey_menu_left\fR
Key that moves the currently selected slider on the menu left. 
.TP
\fBkey_menu_right\fR
Key that moves the currently selected slider on the menu right. 
.TP
\fBkey_menu_back\fR
Key to go back to the previous menu. 
.TP
\fBkey_menu_forward\fR
Key to activate the currently selected menu item. 
.TP
\fBkey_menu_confirm\fR
Key to answer 'yes' to a question in the menu. 
.TP
\fBkey_menu_abort\fR
Key to answer 'no' to a question in the menu. 
.TP
\fBkey_menu_help\fR
Keyboard shortcut to bring up the help screen. 
.TP
\fBkey_menu_save\fR
Keyboard shortcut to bring up the save game menu. 
.TP
\fBkey_menu_load\fR
Keyboard shortcut to bring up the load game menu. 
.TP
\fBkey_menu_volume\fR
Keyboard shortcut to bring up the sound volume menu. 
.TP
\fBkey_menu_detail\fR
Keyboard shortcut to toggle the detail level. 
.TP
\fBkey_menu_qsave\fR
Keyboard shortcut to quicksave the current game. 
.TP
\fBkey_menu_endgame\fR
Keyboard shortcut to end the game. 
.TP
\fBkey_menu_messages\fR
Keyboard shortcut to toggle heads\-up messages. 
.TP
\fBkey_menu_qload\fR
Keyboard shortcut to load the last quicksave. 
.TP
\fBkey_menu_quit\fR
Keyboard shortcut to quit the game. 
.TP
\fBkey_menu_gamma\fR
Keyboard shortcut to toggle the gamma correction level. 
.TP
\fBkey_spy\fR
Keyboard shortcut to switch view in multiplayer. 
.TP
\fBkey_menu_incscreen\fR
Keyboard shortcut to increase the screen size. 
.TP
\fBkey_menu_decscreen\fR
Keyboard shortcut to decrease the screen size. 
.TP
\fBkey_menu_screenshot\fR
Keyboard shortcut to save a screenshot. 
.TP
\fBkey_map_toggle\fR
Key to toggle the map view. 
.TP
\fBkey_map_north\fR
Key to pan north when in the map view. 
.TP
\fBkey_map_south\fR
Key to pan south when in the map view. 
.TP
\fBkey_map_east\fR
Key to pan east when in the map view. 
.TP
\fBkey_map_west\fR
Key to pan west when in the map view. 
.TP
\fBkey_map_zoomin\fR
Key to zoom in when in the map view. 
.TP
\fBkey_map_zoomout\fR
Key to zoom out when in the map view. 
.TP
\fBkey_map_maxzoom\fR
Key to zoom out the maximum amount when in the map view. 
.TP
\fBkey_map_follow\fR
Key to toggle follow mode when in the map view. 
.TP
\fBkey_map_grid\fR
Key to toggle the grid display when in the map view. 
.TP
\fBkey_map_mark\fR
Key to set a mark when in the map view. 
.TP
\fBkey_map_clearmark\fR
Key to clear all marks when in the map view. 
.TP
\fBkey_weapon1\fR
Key to select weapon 1. 
.TP
\fBkey_weapon2\fR
Key to select weapon 2. 
.TP
\fBkey_weapon3\fR
Key to select weapon 3. 
.TP
\fBkey_weapon4\fR
Key to select weapon 4. 
.TP
\fBkey_weapon5\fR
Key to select weapon 5. 
.TP
\fBkey_weapon6\fR
Key to select weapon 6. 
.TP
\fBkey_weapon7\fR
Key to select weapon 7. 
.TP
\fBkey_weapon8\fR
Key to select weapon 8. 
.TP
\fBkey_prevweapon\fR
Key to cycle to the previous weapon. 
.TP
\fBkey_nextweapon\fR
Key to cycle to the next weapon. 
.TP
\fBkey_message_refresh\fR
Key to re\-display last message. 
.TP
\fBkey_demo_quit\fR
Key to quit the game when recording a demo. 
.TP
\fBkey_multi_msg\fR
Key to send a message during multiplayer games. 
.TP
\fBkey_multi_msgplayer1\fR
Key to send a message to player 1 during multiplayer games. 
.TP
\fBkey_multi_msgplayer2\fR
Key to send a message to player 2 during multiplayer games. 
.TP
\fBkey_multi_msgplayer3\fR
Key to send a message to player 3 during multiplayer games. 
.TP
\fBkey_multi_msgplayer4\fR
Key to send a message to player 4 during multiplayer games.

.SH SEE ALSO
\fBchocolate-doom\fR(6),
\fBdefault.cfg\fR(5),
\fBchocolate-setup\fR(6)

